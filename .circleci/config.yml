version: 2.1
orbs:
  node: circleci/node@3.0.0
  azure-acr: circleci/azure-acr@0.2.0
  azure-cli: circleci/azure-cli@1.1.0
  kubernetes: circleci/kubernetes@0.11.2
  helm: circleci/helm@1.0.1


commands:
      set-azure-credentials:
      #sets the azure login credentials to the correct environment.
            steps:
                  - run:
                        name: "Set azure login credentials to default environment variables"
                        command: |
                              echo "export AZURE_SP=PRODUCTION_AZURE_SP" >> $BASH_ENV
                              echo "export AZURE_SP_PASSWORD=$PRODUCTION_AZURE_SP_PASSWORD" >> $BASH_ENV
                              echo "export AZURE_SP_TENANT=$PRODUCTION_AZURE_SP_TENANT" >> $BASH_ENV
                              source $BASH_ENV
      set-image-tag:
      #checks for the build trigger (git tag vs code change) and sets the image tag to the appropriate corresponding value.
            steps:
                  - run: 
                        name: "Set environment variables for the git tag and the commit reference"
                        command: |     
                              echo "export GIT_TAG=<<pipeline.git.tag>>" >> $BASH_ENV
                              echo "export COMMIT_ID=$(echo $CIRCLE_SHA1 | cut -c 1-7)" >> $BASH_ENV
                              source $BASH_ENV
                  - run: echo "export TAG=${COMMIT_ID}" >> $BASH_ENV; source $BASH_ENV
                  - when: 
                        condition: <<pipeline.git.tag>>
                        steps:      
                              - run:
                                    command: | 
                                          echo "export TAG=${GIT_TAG}" >> $BASH_ENV
                                          source $BASH_ENV

                  - run: echo "Image tag is set to $TAG"
      pull-meta:
            parameters:
                  image-repo-name:
                        type: string
                        default: "inferno"
                  image-tag:
                        type: string
                        default: ""
                  deploy-environment:
                        type: string
                        default: ""
            steps:
                  - run:
                        name: "Checkout pipeline repo, set environment variables, and run metadata script"
                        command: |  
                              if ! [ -d ./pipeline ]; then
                                    git clone git@github.com:JolokiaCorporation/pipeline.git
                              fi
                              cd pipeline
                              echo "export IMAGE_REPO_NAME=<<parameters.image-repo-name>>"
                              echo "export IMAGE_TAG=<<parameters.image-tag>>"
                              echo "export DEPLOY_ENVIRONMENT=<<parameters.deploy-environment>>" 
                              python3 build_metadata.py
                  - store_artifacts:
                        path: ./pipeline/build_metadata.txt

jobs:
 build-and-push-image:
      docker:
            - image: infernocoreprd.azurecr.io/inferno-circle:latest
              auth:
                  username: $DOCKERHUB_USER
                  password: $DOCKERHUB_PASSWORD
      parameters:
            #Colloquial environment name reference for tagging and communication purposes, usually maps to namespace 
            environment-name:
                  type: string
                  default: "staging"
            namespace:
                  type: string
                  default: core
      steps:
            - setup_remote_docker:
                  version: 20.10.2
            - set-azure-credentials
            - checkout
            - set-image-tag
            - pull-meta:
                  image-tag: $TAG
            - azure-acr/build-and-push-image:
                  login-server-name: infernocoreprd.azurecr.io
                  repo: inferno-ui-avatar
                  registry-name: infernocoreprd
                  tag: $TAG

workflows:
  staging-build-and-deploy:
    jobs:
      - build-and-push-image:
          name: staging-build-and-push-image
          context:
              - Production
              - Global